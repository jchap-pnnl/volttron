import zmq.green as zmq
import os
import random
import sys
import time
import zmq.auth
from zmq.auth.thread import ThreadAuthenticator

port = "5001"
# These directories are generated by the generate_certificates script
base_dir = os.path.dirname(__file__)
keys_dir = os.path.join(base_dir, 'certificates')
public_keys_dir = os.path.join(base_dir, 'public_keys')
secret_keys_dir = os.path.join(base_dir, 'private_keys')

ctx = zmq.Context.instance()

# Start an authenticator for this context.
auth = ThreadAuthenticator(ctx)
auth.start()
auth.allow('127.0.0.1')
# Tell the authenticator how to handle CURVE requests
auth.configure_curve(domain='*', location=zmq.auth.CURVE_ALLOW_ANY)

server = ctx.socket(zmq.PUB)
server_secret_file = os.path.join(secret_keys_dir, "server.key_secret")
server_public, server_secret = zmq.auth.load_certificate(server_secret_file)
server.curve_secretkey = server_secret
server.curve_publickey = server_public
server.curve_server = True  # must come before bind
server.connect('tcp://127.0.0.1:%s' % port)
#
# context = zmq.Context()
# socket = context.socket(zmq.PUB)
# socket.connect("ipc://@/home/vdev/.volttron/run/subscribe")

#socket.connect("tcp://127.0.0.1:%s" % port)
publisher_id = random.randrange(0,9999)
while True:
    topic = random.randrange(1,10)
    messagedata = "server#%s" % publisher_id
    print "%s %s" % (topic, messagedata) #messagedata)
    server.send("%d %s" % (topic, messagedata))
    time.sleep(0.1)
