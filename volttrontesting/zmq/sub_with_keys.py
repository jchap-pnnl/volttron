import sys
import zmq.green as zmq
import os
import zmq.auth


port = "5000"
# These directories are generated by the generate_certificates script
base_dir = os.path.dirname(__file__)
keys_dir = os.path.join(base_dir, 'certificates')
public_keys_dir = os.path.join(base_dir, 'public_keys')
secret_keys_dir = os.path.join(base_dir, 'private_keys')

ctx = zmq.Context.instance()

client = ctx.socket(zmq.SUB)
# We need two certificates, one for the client and one for
# the server. The client must know the server's public key
# to make a CURVE connection.
client_secret_file = os.path.join(secret_keys_dir, "client.key_secret")
client_public, client_secret = zmq.auth.load_certificate(client_secret_file)
client.curve_secretkey = client_secret
client.curve_publickey = client_public

# The client must know the server's public key to make a CURVE connection.
server_public_file = os.path.join(public_keys_dir, "server.key")
server_public, _ = zmq.auth.load_certificate(server_public_file)
client.curve_serverkey = server_public

client.connect('tcp://127.0.0.1:%s' % port)
# Socket to talk to server
#context = zmq.Context()
#socket = context.socket(zmq.SUB)
print "Collecting updates from server..."
#socket.connect ("tcp://127.0.0.1:%s" % port)
#socket.connect ("ipc://@/home/vdev/.volttron/run/publish")
topicfilter = ""
client.setsockopt(zmq.SUBSCRIBE, topicfilter)
for update_nbr in range(10):
    string = client.recv()
    topic, messagedata = string.split()
    print topic, messagedata
